/*描述

一群N人想用一艘船过河，船最多只能载两个人。因此，必须安排某种穿梭安排，以便来回划船，以便所有人都能过河。每个人的划船速度不同；一对夫妇的速度由较慢的一对的速度决定。你的工作是确定一种策略，最大限度地减少这些人通过的时间。
输入

输入的第一行包含一个整数 T (1 <= T <= 20)，即测试用例的数量。然后是 T 个案例。每个案例的第一行包含 N，第二行包含 N 个整数，给出每个人过河的时间。每个案例前面都有一个空行。不会超过 1000 人，没有人需要超过 100 秒才能通过。
输出

对于每个测试用例，打印一行，其中包含所有 N 个人过河所需的总秒数。
样本输入

1
4
1 2 5 10
样本输出

17
*/

#include<bits/stdc++.h>
using namespace std; 
int T, n, a[1005], ret;

int main()
{
	cin >> T;
	while (T--)
	{
		cin >> n;
		ret = 0;
		for (int i = 0; i < n; i++)
		{
			cin >> a[i];
		}
		while (n > 3)
		{
			ret += min(a[n - 1] + a[0] + 2 * a[1], 2*a[0] + a[n - 2] + a[n - 1]);
			n -= 2;
		}
		if (n == 2) ret += + a[1];
		else if (n == 3) ret += a[0] + a[2] + a[1];
		else if (n == 1) ret += a[0];
		cout << ret << endl;
	}
	return 0;
}
